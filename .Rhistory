) %>% layout(
title = "Onset-to-Door Time (min)<br><sup></sup>",
yaxis = list(title = "Time (min)",
tickfont = list(size = 10)),
xaxis = list(title = "Case")
) %>% layout(legend = list(x = 0.87, y = 0.9, traceorder = "normal"
)) %>%
layout(annotations =
list(x = 1, y = 0.51, text = "",
showarrow = F, xref='paper', yref='paper',
xanchor='right', yanchor='auto', xshift=0, yshift=0,
font=list(size=12, color="grey"))
)
median(odt$onset_to_door)
p <- plot_ly(odt, x = ~factor(case), y = ~onset_to_door, alpha = 0.97, size = 7)
subplot(
add_bars(p, color = ~factor(case), colors = colorRampPalette(brewer.pal(21,"Spectral"))(21),  showlegend = F)
) %>% layout(
title = "Onset-to-Door Time (min)<br><sup></sup>",
subtitle = median(odt$onset_to_door),
yaxis = list(title = "Time (min)",
tickfont = list(size = 10)),
xaxis = list(title = "Case")
) %>% layout(legend = list(x = 0.87, y = 0.9, traceorder = "normal"
)) %>%
layout(annotations =
list(x = 1, y = 0.51, text = "",
showarrow = F, xref='paper', yref='paper',
xanchor='right', yanchor='auto', xshift=0, yshift=0,
font=list(size=12, color="grey"))
)
p <- plot_ly(odt, x = ~factor(case), y = ~onset_to_door, alpha = 0.97, size = 7)
subplot(
add_bars(p, color = ~factor(case), colors = colorRampPalette(brewer.pal(21,"Spectral"))(21),  showlegend = F)
) %>% layout(
title = "Onset-to-Door Time (min)<br><sup></sup>",
subtitle = median(odt$onset_to_door),
yaxis = list(title = "Time (min)",
tickfont = list(size = 10)),
xaxis = list(title = "Case")
) %>% layout(legend = list(x = 0.87, y = 0.9, traceorder = "normal"
)) %>%
layout(annotations =
list(x = 1, y = 0.51, text = median(odt$onset_to_door),
showarrow = F, xref='paper', yref='paper',
xanchor='right', yanchor='auto', xshift=0, yshift=0,
font=list(size=12, color="grey"))
)
p <- plot_ly(odt, x = ~factor(case), y = ~onset_to_door, alpha = 0.97, size = 7)
subplot(
add_bars(p, color = ~factor(case), colors = colorRampPalette(brewer.pal(21,"Spectral"))(21),  showlegend = F)
) %>% layout(
title = "Onset-to-Door Time (min)<br><sup></sup>",
subtitle = median(odt$onset_to_door),
yaxis = list(title = "Time (min)",
tickfont = list(size = 10)),
xaxis = list(title = "Case")
) %>% layout(legend = list(x = 0.87, y = 0.9, traceorder = "normal"
)) %>%
layout(annotations =
list(x = 1, y = 0.51, text = "",
showarrow = F, xref='paper', yref='paper',
xanchor='right', yanchor='auto', xshift=0, yshift=0,
font=list(size=12, color="grey"))
)
p <- plot_ly(odt, x = ~factor(case), y = ~onset_to_door, alpha = 0.97, size = 7)
subplot(
add_bars(p, color = ~factor(case), colors = colorRampPalette(brewer.pal(21,"Spectral"))(21),  showlegend = F)
) %>% layout(
title = "Onset-to-Door Time (min)<br><sup></sup>",
yaxis = list(title = "Time (min)",
tickfont = list(size = 10)),
xaxis = list(title = "Case")
) %>% layout(legend = list(x = 0.87, y = 0.9, traceorder = "normal"
)) %>%
layout(annotations =
list(x = 1, y = 0.51, text = "",
showarrow = F, xref='paper', yref='paper',
xanchor='right', yanchor='auto', xshift=0, yshift=0,
font=list(size=12, color="grey"))
)
p <- plot_ly(odt, x = ~factor(case), y = ~onset_to_door, alpha = 0.97, size = 7)
subplot(
add_bars(p, color = ~factor(case), colors = colorRampPalette(brewer.pal(21,"Spectral"))(21),  showlegend = F)
) %>% layout(
title = "Onset-to-Door Time (min)<br><sup>Median = 78 min</sup>",
yaxis = list(title = "Time (min)",
tickfont = list(size = 10)),
xaxis = list(title = "Case")
) %>% layout(legend = list(x = 0.87, y = 0.9, traceorder = "normal"
)) %>%
layout(annotations =
list(x = 1, y = 0.51, text = "",
showarrow = F, xref='paper', yref='paper',
xanchor='right', yanchor='auto', xshift=0, yshift=0,
font=list(size=12, color="grey"))
)
url <- 'https://docs.google.com/spreadsheets/d/1uq4sl13vQh7fI0nxRWuCOZezo8xTV0_nt7Ullh1dyrA/edit#gid=1195739865'
d2ct <- gsheet2tbl(url)
median(d2ct$door_to_CT)
View(d2ct)
url <- 'https://docs.google.com/spreadsheets/d/1uq4sl13vQh7fI0nxRWuCOZezo8xTV0_nt7Ullh1dyrA/edit#gid=1195739865'
d2ct <- gsheet2tbl(url)
median(d2ct$door_to_CT)
str(d2ct)
str(d2ct)
median(d2ct$door_to_CT)
url <- 'https://docs.google.com/spreadsheets/d/1uq4sl13vQh7fI0nxRWuCOZezo8xTV0_nt7Ullh1dyrA/edit#gid=1195739865'
d2ct <- gsheet2tbl(url)
median(d2ct$door_to_CT, na.rm = T)
p <- plot_ly(d2ct, x = ~factor(case), y = ~door_to_CT, alpha = 0.97, size = 7)
subplot(
add_bars(p, color = ~factor(case), colors = colorRampPalette(brewer.pal(21,"Spectral"))(21),  showlegend = F)
) %>% layout(
title = "Door-to-CT Time (min)<br><sup>Median = 17 min</sup>",
yaxis = list(title = "Time (min)",
tickfont = list(size = 10)),
xaxis = list(title = "Case")
) %>% layout(legend = list(x = 0.87, y = 0.9, traceorder = "normal"
)) %>%
layout(annotations =
list(x = 1, y = 0.51, text = "",
showarrow = F, xref='paper', yref='paper',
xanchor='right', yanchor='auto', xshift=0, yshift=0,
font=list(size=12, color="grey"))
)
url <- 'https://docs.google.com/spreadsheets/d/1uq4sl13vQh7fI0nxRWuCOZezo8xTV0_nt7Ullh1dyrA/edit#gid=1635939701'
d2n <- gsheet2tbl(url)
median(d2n$door_to_needle, na.rm = T)
url <- 'https://docs.google.com/spreadsheets/d/1uq4sl13vQh7fI0nxRWuCOZezo8xTV0_nt7Ullh1dyrA/edit#gid=1635939701'
d2n <- gsheet2tbl(url)
str(d2n)
median(d2n$door_to_needle, na.rm = T)
View(d2n)
url <- 'https://docs.google.com/spreadsheets/d/1uq4sl13vQh7fI0nxRWuCOZezo8xTV0_nt7Ullh1dyrA/edit#gid=1635939701'
d2n <- gsheet2tbl(url)
str(d2n)
median(d2n$door_to_needle, na.rm = T)
url <- 'https://docs.google.com/spreadsheets/d/1uq4sl13vQh7fI0nxRWuCOZezo8xTV0_nt7Ullh1dyrA/edit#gid=1635939701'
d2n <- gsheet2tbl(url)
str(d2n)
median(d2n$door-to-needle)
url <- 'https://docs.google.com/spreadsheets/d/1uq4sl13vQh7fI0nxRWuCOZezo8xTV0_nt7Ullh1dyrA/edit#gid=1635939701'
d2n <- gsheet2tbl(url)
str(d2n)
median(d2n$door-to-needle)
url <- 'https://docs.google.com/spreadsheets/d/1uq4sl13vQh7fI0nxRWuCOZezo8xTV0_nt7Ullh1dyrA/edit#gid=1635939701'
d2n <- gsheet2tbl(url)
str(d2n)
median(d2n$door_to_needle)
url <- 'https://docs.google.com/spreadsheets/d/1uq4sl13vQh7fI0nxRWuCOZezo8xTV0_nt7Ullh1dyrA/edit#gid=1635939701'
d2n <- gsheet2tbl(url)
#median(d2n$door_to_needle)
p <- plot_ly(d2n, x = ~factor(case), y = ~door_to_CT, alpha = 0.97, size = 7)
subplot(
add_bars(p, color = ~factor(case), colors = colorRampPalette(brewer.pal(21,"Spectral"))(21),  showlegend = F)
) %>% layout(
title = "Door-to-Needle Time (min)<br><sup>Median = 80 min</sup>",
yaxis = list(title = "Time (min)",
tickfont = list(size = 10)),
xaxis = list(title = "Case")
) %>% layout(legend = list(x = 0.87, y = 0.9, traceorder = "normal"
)) %>%
layout(annotations =
list(x = 1, y = 0.51, text = "",
showarrow = F, xref='paper', yref='paper',
xanchor='right', yanchor='auto', xshift=0, yshift=0,
font=list(size=12, color="grey"))
)
p <- plot_ly(d2n, x = ~factor(case), y = ~door_to_needle, alpha = 0.97, size = 7)
subplot(
add_bars(p, color = ~factor(case), colors = colorRampPalette(brewer.pal(21,"Spectral"))(21),  showlegend = F)
) %>% layout(
title = "Door-to-Needle Time (min)<br><sup>Median = 80 min</sup>",
yaxis = list(title = "Time (min)",
tickfont = list(size = 10)),
xaxis = list(title = "Case")
) %>% layout(legend = list(x = 0.87, y = 0.9, traceorder = "normal"
)) %>%
layout(annotations =
list(x = 1, y = 0.51, text = "",
showarrow = F, xref='paper', yref='paper',
xanchor='right', yanchor='auto', xshift=0, yshift=0,
font=list(size=12, color="grey"))
)
url <- 'https://docs.google.com/spreadsheets/d/1uq4sl13vQh7fI0nxRWuCOZezo8xTV0_nt7Ullh1dyrA/edit#gid=1195739865'
d2ct <- gsheet2tbl(url)
mean(d2ct$door_to_CT, na.rm = T)
library(distill)
library(plotly)
library(shiny)
library(googlesheets)
library(gsheet)
library(RColorBrewer)
url <- 'https://docs.google.com/spreadsheets/d/1F5hH2qqvEeeoUfgbhtOmP5-PGEE8poyzDrspgxt2LWs/edit?usp=share_link'
syl <- gsheet2tbl(url)
View(syl)
url <- 'https://docs.google.com/spreadsheets/d/1F5hH2qqvEeeoUfgbhtOmP5-PGEE8poyzDrspgxt2LWs/edit?usp=share_link'
syl <- gsheet2tbl(url)
View(syl)
library(distill)
library(plotly)
library(shiny)
library(googlesheets)
library(gsheet)
library(RColorBrewer)
library(Rmarkdown)
library(distill)
library(plotly)
library(shiny)
library(googlesheets)
library(gsheet)
library(RColorBrewer)
library(rmarkdown)
url <- 'https://docs.google.com/spreadsheets/d/1F5hH2qqvEeeoUfgbhtOmP5-PGEE8poyzDrspgxt2LWs/edit?usp=share_link'
syl <- gsheet2tbl(url)
paged_table(syl)
library(distill)
library(plotly)
library(shiny)
library(googlesheets)
library(gsheet)
library(RColorBrewer)
library(rmarkdown)
library(knitr)
library(kableExtra)
knitr::kable(syl, caption = "Data table: Shared general medical workload.", align = "c") %>%
kable_styling(latex_options = "scale_down")
#pander(hosp2019, justify = "center")
knitr::kable(syl, caption = "Training modules and duration.", align = "c") %>%
kable_styling(latex_options = "scale_down")
#pander(hosp2019, justify = "center")
library(distill)
library(googlesheets)
library(gsheet)
library(rmarkdown)
library(knitr)
library(kableExtra)
warnings()
warnings()
library(plotly)
library(shiny)
library(googlesheets)
library(gsheet)
library(RColorBrewer)
url <- 'https://docs.google.com/spreadsheets/d/1fTQsrZJCluSMw3dwygozx_gkohLj5VWyErLvMbpCb3k/edit?usp=sharing'
nani <- gsheet2tbl(url)
View(nani)
url <- 'https://docs.google.com/spreadsheets/d/1fTQsrZJCluSMw3dwygozx_gkohLj5VWyErLvMbpCb3k/edit?usp=sharing'
nani <- gsheet2tbl(url)
View(nani)
summary(nani)
View(nani)
library(dplyr)
library(plotly)
library(shiny)
library(googlesheets)
library(gsheet)
library(RColorBrewer)
url <- 'https://docs.google.com/spreadsheets/d/1fTQsrZJCluSMw3dwygozx_gkohLj5VWyErLvMbpCb3k/edit?usp=sharing'
nani <- gsheet2tbl(url)
nani$gender <- as.factor(nani$gender)
nani$side <- as.factor(nani$side)
nani$teic <- as.factor(nani$teic)
nani$fu_dur <- as.numeric(nani$fu_dur)
nani$preop_crp <- as.numeric(nani$preop_crp)
nani$postop_crp <- as.numeric(nani$postop_crp)
nani$preop_esr <- as.numeric(nani$preop_esr)
nani$postop_esr <- as.numeric(nani$postop_esr)
nani$fu_dur <- as.numeric(nani$fu_dur)
nani$fu_dur <- as.numeric(nani$fu_dur)
nani$mth1 <- as.factor(nani$mth1)
nani$mth2 <- as.factor(nani$mth2)
nani$mth3 <- as.factor(nani$mth3)
nani$mth6 <- as.factor(nani$mth6)
nani$tobacco <- as.factor(nani$tobacco)
nani$compl <- as.factor(nani$compl)
summary(nani)
nani %>% group_by(teic, gender)
nani %>% table(teic, gender)
table(nani$teic, nani$gender)
library(gtsummary)
table1 <- tbl_summary(nani[4:], digits = list(all_categorical() ~ c(0,1)))
library(gtsummary)
table1 <- tbl_summary(nani[4:30], digits = list(all_categorical() ~ c(0,1)))
table1
table2 <-
tbl_summary(
nani,
by = mth1, # split table by group
missing = "no", # don't list missing data separately
digits = list(all_categorical() ~ c(0,1))
) %>%
add_n() %>% # add column with total number of non-missing observations
add_p() %>% # test for a difference between groups
modify_header(label = "**Variable**") %>% # update the column header
bold_labels()
table2
table2 <-
tbl_summary(
nani[4:30],
by = mth1, # split table by group
missing = "no", # don't list missing data separately
digits = list(all_categorical() ~ c(0,1))
) %>%
add_n() %>% # add column with total number of non-missing observations
add_p() %>% # test for a difference between groups
modify_header(label = "**Variable**") %>% # update the column header
bold_labels()
table2
tbl_merge1 <-
tbl_merge(
tbls = list(table1, table2)
)
tbl_merge1
nani <- nani %>% mutate(any_inf=mth1=="1" | mth2=="1" | mth3=="1" | mth6=="1")
summary(nani$any_inf)
summary(nani)
library(gtsummary)
table1 <- tbl_summary(nani[4:31], digits = list(all_categorical() ~ c(0,1)))
table1
table2 <-
tbl_summary(
nani[4:31],
by = mth1, # split table by group
missing = "no", # don't list missing data separately
digits = list(all_categorical() ~ c(0,1))
) %>%
add_n() %>% # add column with total number of non-missing observations
add_p() %>% # test for a difference between groups
modify_header(label = "**Variable**") %>% # update the column header
bold_labels()
table2
table2 <-
tbl_summary(
nani[4:31],
by = any_inf, # split table by group
missing = "no", # don't list missing data separately
digits = list(all_categorical() ~ c(0,1))
) %>%
add_n() %>% # add column with total number of non-missing observations
add_p() %>% # test for a difference between groups
modify_header(label = "**Variable**") %>% # update the column header
bold_labels()
table2
str(nani)
library(dplyr)
load("dfs7i.Rdata")
# source: reprosed2020_impute2.Rmd
library(gtsummary)
table1 <- tbl_summary(dfs7i[-1], digits = list(all_categorical() ~ c(0,1)))
table1
table2 <-
tbl_summary(
dfs7i,
by = outcome, # split table by group
missing = "no", # don't list missing data separately
digits = list(all_categorical() ~ c(0,1))
) %>%
add_n() %>% # add column with total number of non-missing observations
add_p() %>% # test for a difference between groups
modify_header(label = "**Variable**") %>% # update the column header
bold_labels()
table2
tbl_merge1 <-
tbl_merge(
tbls = list(table1, table2)
)
tbl_merge1
library(flextable)
tbl_merge1 %>%
as_flex_table()
library(dplyr)
library(plotly)
library(shiny)
library(googlesheets)
library(gsheet)
library(RColorBrewer)
url <- 'https://docs.google.com/spreadsheets/d/1fTQsrZJCluSMw3dwygozx_gkohLj5VWyErLvMbpCb3k/edit?usp=sharing'
nani <- gsheet2tbl(url)
nani$gender <- as.factor(nani$gender)
nani$side <- as.factor(nani$side)
nani$teic <- as.factor(nani$teic)
nani$fu_dur <- as.numeric(nani$fu_dur)
nani$preop_crp <- as.numeric(nani$preop_crp)
nani$postop_crp <- as.numeric(nani$postop_crp)
nani$preop_esr <- as.numeric(nani$preop_esr)
nani$postop_esr <- as.numeric(nani$postop_esr)
nani$fu_dur <- as.numeric(nani$fu_dur)
nani$fu_dur <- as.numeric(nani$fu_dur)
nani$mth1 <- as.factor(nani$mth1)
nani$mth2 <- as.factor(nani$mth2)
nani$mth3 <- as.factor(nani$mth3)
nani$mth6 <- as.factor(nani$mth6)
nani$tobacco <- as.factor(nani$tobacco)
nani$compl <- as.factor(nani$compl)
nani <- nani %>% mutate(any_inf=mth1=="1" | mth2=="1" | mth3=="1" | mth6=="1")
summary(nani$any_inf)
str(nani)
library(gtsummary)
table1 <- tbl_summary(nani[4:31], digits = list(all_categorical() ~ c(0,1)))
table1
##### any_inf
table2 <-
tbl_summary(
nani[4:31],
by = any_inf, # split table by group
missing = "no", # don't list missing data separately
digits = list(all_categorical() ~ c(0,1))
) %>%
add_n() %>% # add column with total number of non-missing observations
add_p() %>% # test for a difference between groups
modify_header(label = "**Variable**") %>% # update the column header
bold_labels()
table2
tbl_merge1 <-
tbl_merge(
tbls = list(table1, table2)
)
tbl_merge1
library(flextable)
tbl_merge1 %>%
as_flex_table()
wilcox.test(nani$los, nani$any_inf, conf.int = T)
wilcox.test(nani$los, nani$any_inf, conf.int = y)
wilcox.test(nani$los, nani$any_inf, conf.int = TRUE)
wilcox.test(nani$any_inf, nani$los, conf.int = TRUE)
wilcox.test(los ~ any_inf, data = nani, conf.int = TRUE)
##### any_inf
table2 <-
tbl_summary(
nani[4:31],
by = mth1, # split table by group
missing = "no", # don't list missing data separately
digits = list(all_categorical() ~ c(0,1))
) %>%
add_n() %>% # add column with total number of non-missing observations
add_p() %>% # test for a difference between groups
modify_header(label = "**Variable**") %>% # update the column header
bold_labels()
table2
tbl_merge1 <-
tbl_merge(
tbls = list(table1, table2)
)
tbl_merge1
library(flextable)
tbl_merge1 %>%
as_flex_table()
##### mth2
table2 <-
tbl_summary(
nani[4:31],
by = mth2, # split table by group
missing = "no", # don't list missing data separately
digits = list(all_categorical() ~ c(0,1))
) %>%
add_n() %>% # add column with total number of non-missing observations
add_p() %>% # test for a difference between groups
modify_header(label = "**Variable**") %>% # update the column header
bold_labels()
table2
tbl_merge1 <-
tbl_merge(
tbls = list(table1, table2)
)
tbl_merge1
library(flextable)
tbl_merge1 %>%
as_flex_table()
##### mth3
table2 <-
tbl_summary(
nani[4:31],
by = mth3, # split table by group
missing = "no", # don't list missing data separately
digits = list(all_categorical() ~ c(0,1))
) %>%
add_n() %>% # add column with total number of non-missing observations
add_p() %>% # test for a difference between groups
modify_header(label = "**Variable**") %>% # update the column header
bold_labels()
table2
tbl_merge1 <-
tbl_merge(
tbls = list(table1, table2)
)
tbl_merge1
library(flextable)
tbl_merge1 %>%
as_flex_table()
##### mth6
table2 <-
tbl_summary(
nani[4:31],
by = mth6, # split table by group
missing = "no", # don't list missing data separately
digits = list(all_categorical() ~ c(0,1))
) %>%
add_n() %>% # add column with total number of non-missing observations
add_p() %>% # test for a difference between groups
modify_header(label = "**Variable**") %>% # update the column header
bold_labels()
table2
tbl_merge1 <-
tbl_merge(
tbls = list(table1, table2)
)
tbl_merge1
library(flextable)
tbl_merge1 %>%
as_flex_table()
